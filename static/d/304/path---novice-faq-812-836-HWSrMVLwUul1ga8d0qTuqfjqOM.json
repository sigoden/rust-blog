{"data":{"site":{"siteMetadata":{"title":"Rust 博客","author":"sigoden huang"}},"markdownRemark":{"id":"eff46b8e-74f8-5e3d-8a96-6f001ba2dd49","excerpt":"Rust 初学者常会碰到的一些问题的归纳和解答。 注意: 此文会不定期更新。  更新 rustup 工具自身 toolchain: Rust 发布频道，如  ， ,   。 target: Rust 支持的平台，如   和  ,点击 platform-support 获取查看所有支持的平台 component…","html":"<p>Rust 初学者常会碰到的一些问题的归纳和解答。</p>\n<blockquote>\n<p>注意: 此文会不定期更新。</p>\n</blockquote>\n<details>\n<summary>\n如何安装 Rust ?\n</summary>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">curl https://sh.rustup.rs -sSf | sh </code></pre></div>\n</details>\n<details>\n<summary>\n如何更新 Rust ?\n</summary>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">rustup update # 更新</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">rustup self update</code> 更新 rustup 工具自身</p>\n</blockquote>\n</details>\n<details>\n<summary>\n什么是 toolchain, target, component？\n</summary>\n<ul>\n<li>toolchain: Rust 发布频道，如 <code class=\"language-text\">stable</code>，<code class=\"language-text\">beta</code>, <code class=\"language-text\">nightly</code> 。</li>\n<li>target: Rust 支持的平台，如 <code class=\"language-text\">x86_64-unknown-linux-gnu</code> 和 <code class=\"language-text\">wasm32-unknown-unknown</code>,点击<a href=\"https://forge.rust-lang.org/platform-support.html\">platform-support</a>获取查看所有支持的平台</li>\n<li>\n<p>component: Rust 工具箱组件，常见有 <code class=\"language-text\">cargo</code>(包管理), <code class=\"language-text\">rustc</code>(编译器) <code class=\"language-text\">rust-src</code>(rust源码)，<code class=\"language-text\">rust-std</code>(std库)，<code class=\"language-text\">clippy</code>(lint),<code class=\"language-text\">rustfmt</code>(格式工具)。</p>\n</details>\n</li>\n</ul>\n<details>\n<summary>\n如何安装并使用 nightly ?\n</summary>\n<p>安装</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rustup install nightly\nrustup component add --toolchain nightly clippy rust-src rustfmt</code></pre></div>\n<p>配置项目使用 nightly</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rustup override set nightly</code></pre></div>\n<p>使用 nightly 版本的命令</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cargo +nightly build</code></pre></div>\n</details>\n<details>\n<summary>\nCargo下载太慢，如何加速?\n</summary>\n<ul>\n<li>Cargo 换源</li>\n</ul>\n<p>修改 <code class=\"language-text\">$HOME/.cargo/config</code> 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[source.crates-io]\nreplace-with = &#39;ustc&#39;\n\n[source.ustc]\nregistry = &quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</code></pre></div>\n<ul>\n<li>Cargo 代理</li>\n</ul>\n<p>修改 <code class=\"language-text\">$HOME/.cargo/config</code> 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[http]\nproxy = &quot;127.0.0.1:8080&quot;\n\n[https]\nproxy = &quot;127.0.0.1:8080&quot;</code></pre></div>\n<blockquote>\n<p>将替换 <code class=\"language-text\">127.0.0.1:8080</code> 成你的代理服务器地址</p>\n</blockquote>\n</details>\n<details>\n<summary>\nrust开发使用什么 IDE？\n</summary>\n<ul>\n<li>clion + <a href=\"https://plugins.jetbrains.com/plugin/8182-rust/\">IntelliJ Rust plugin</a></li>\n<li>vscode + <a href=\"https://github.com/rust-analyzer/rust-analyzer\">ra-lsp</a></li>\n</ul>\n<blockquote>\n<p>安装 <code class=\"language-text\">ra-lsp</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/rust-analyzer/rust-analyzer\ncd rust-analyzer\ncargo install-code</code></pre></div>\n</details>\n<details>\n<summary>\n为什么学习 Rust 要先从书籍而不是代码开始？\n</summary>\n<p>Rust 引入了很多独特的概念（Trait, 所有权与借用，生命周期)，加上编译器十分严格，所以建议从阅读书籍理解基础概念入手。</p>\n<p>如果不理解这些直接写代码，就是和编译器战斗了，学习效率及其低下且痛苦。</p>\n<p>下面列出了一些重要的书籍。</p>\n<h4>必读</h4>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/\">The Rust Programing Language</a></li>\n<li><a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/index.html\">The Edition Guide</a></li>\n</ul>\n<h4>强烈推荐</h4>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/rust-by-example/\">Rust by Example</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/nomicon/README.html\">The Rustonomicon</a></li>\n<li><a href=\"https://doc.rust-lang.org/cargo/guide/\">The Cargo Book</a></li>\n</ul>\n</details>\n<details>\n<summary>\n如何查询 Rust 语法规范？\n</summary>\n<p><a href=\"https://doc.rust-lang.org/reference/introduction.html\">The Rust Reference</a></p>\n</details>\n<details>\n<summary>\nRust 的 Features 清单?\n</summary>\n<p><a href=\"https://doc.rust-lang.org/unstable-book/index.html\">The Unstable Book</a></p>\n</details>\n<details>\n<summary>\nRust 程序员自称？\n</summary>\n<p>rustacean</p>\n</details>\n<details>\n<summary>\nRust 术语中英文对照词典？\n</summary>\n<p><a href=\"https://github.com/rust-lang-cn/english-chinese-glossary-of-rust/blob/master/rust-glossary.md\">Rust Glossary</a></p>\n</details>\n<details>\n<summary>\n为什么要多使用 `cargo check` 少使用 `cargo build`?\n</summary>\n<p><code class=\"language-text\">cargo check</code> 专为加速工作流而开发的命令，它不产生二进制，只确保代码能够编译通过，<strong>更快</strong>。</p>\n<p>推荐开发流程：</p>\n<ol>\n<li>编写代码</li>\n<li>运行 <code class=\"language-text\">cargo check</code> 判断是否编译通过</li>\n<li>重复步骤 1-2</li>\n<li>运行 <code class=\"language-text\">cargo test</code>，确保通过所有测试</li>\n<li>运行 <code class=\"language-text\">cargo build</code> 生成可执行文件</li>\n<li>\n<p>执行步骤 1</p>\n</details>\n</li>\n</ol>\n<details>\n<summary>\n`#![..]` vs `#[..]` ?\n</summary>\n<p><code class=\"language-text\">#[..]</code> 仅作用于它后面的代码。<code class=\"language-text\">#![..]</code> 作用于整个文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[allow(non_camel_case_types)]</span>\n<span class=\"token keyword\">type</span> int8_t <span class=\"token operator\">=</span> i8<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> int16_t <span class=\"token operator\">=</span> i16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 警告</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#![allow(non_camel_case_types)]</span>\n<span class=\"token keyword\">type</span> int8_t <span class=\"token operator\">=</span> i8<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> int16_t <span class=\"token operator\">=</span> i16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不再警告</span></code></pre></div>\n</details>\n<details>\n<summary>\n如何一键屏蔽所有 unused 警告？\n</summary>\n<p>添加代码</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#![allow(unused)]</code></pre></div>\n</details>\n<details>\n<summary>\n如何减小可执行文件体积？\n</summary>\n<ul>\n<li>\n<p>构建时使用 release 选项</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cargo build --release</code></pre></div>\n</li>\n<li>\n<p>剔除二进制中包含的全部调试用信息</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">strip target/release/$command</code></pre></div>\n</li>\n<li>配置 panic 处理策略</li>\n</ul>\n<p>Cargo.toml</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[profile.release]\npanic = &quot;abort&quot;</code></pre></div>\n<ul>\n<li>启用 LTO</li>\n</ul>\n<p>Cargo.toml</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[profile.release]\nlto = true\ncodegen-units = 1\nincremental = false</code></pre></div>\n<ul>\n<li>调整优化级别</li>\n</ul>\n<p>Cargo.toml</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[profile.release]\nopt-level = &quot;z&quot;</code></pre></div>\n<ul>\n<li>\n<p>移除 <code class=\"language-text\">std</code> 仅使用 <code class=\"language-text\">core</code></p>\n</li>\n<li>\n<p>使用 upx 压缩二进制</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">upx --ultra-brute target/release/$command</code></pre></div>\n</li>\n</ul>\n<p>效果:</p>\n<table>\n<thead>\n<tr>\n<th>build</th>\n<th>modifications</th>\n<th>size (bytes)</th>\n<th>size (human)</th>\n<th>% change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>release</td>\n<td>none</td>\n<td>6706984</td>\n<td>6.4M</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>stripped</td>\n<td>1749216</td>\n<td>1.7M</td>\n<td>-73.9%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>malloc</td>\n<td>4293464</td>\n<td>4.1M</td>\n<td>-36.0%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>panic abort</td>\n<td>6674328</td>\n<td>6.4M</td>\n<td>-0.5%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>No ThinLTO</td>\n<td>4885384</td>\n<td>4.7M</td>\n<td>-27.2%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>-Oz</td>\n<td>6631248</td>\n<td>6.4M</td>\n<td>-1.1%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>all above</td>\n<td>1019704</td>\n<td>996K</td>\n<td>-84.8%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>above + xargo - strip</td>\n<td>1181920</td>\n<td>1154K</td>\n<td>-82.4%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>everything</td>\n<td>835320</td>\n<td>816K</td>\n<td>-87.5%</td>\n</tr>\n<tr>\n<td>release</td>\n<td>everything + upx</td>\n<td>247840</td>\n<td>243K</td>\n<td>-96.3%</td>\n</tr>\n</tbody>\n</table>\n</details>\n<details>\n<summary>\nRust 中宏的种类？\n</summary>\n<h3><code class=\"language-text\">macro_rules</code> 宏</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">macro_rules! say_hello {\n    () =&gt; (\n        println!(&quot;Hello!&quot;);\n    )\n}\n\nsay_hello!()</code></pre></div>\n<h3><code class=\"language-text\">proc_macro</code> 宏</h3>\n<ul>\n<li><strong>#[derive] mode macros</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> proc_macro<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>TokenStream<span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute attr-name\">#[proc_macro_derive(HelloWorld)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">:</span> TokenStream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> TokenStream <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[derive(HelloWorld)]</span>\n<span class=\"token keyword\">struct</span> Pancakes<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><strong>Function-like macros</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> proc_macro<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>TokenStream<span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute attr-name\">#[proc_macro]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function\">make_pub</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> TokenStream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> TokenStream <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token macro-rules function\">make_pub!</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> X<span class=\"token punctuation\">:</span> u32 <span class=\"token operator\">=</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><strong>Attribute macros</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> proc_macro<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>TokenStream<span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute attr-name\">#[proc_macro_attribute]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">:</span> TokenStream<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">:</span> TokenStream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> TokenStream <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[hello]</span>\n<span class=\"token keyword\">fn</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</details>","frontmatter":{"title":"初学者 FAQ？","date":"April 10, 2019","description":"Rust 初学者常会碰到的一些问题的归纳和解答"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/novice-faq/","previous":{"fields":{"slug":"/what-is-cow/"},"frontmatter":{"title":"Cow 是干嘛的？"}},"next":null}}